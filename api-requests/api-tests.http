###
# JavaDynamo API Test Collection
#
# A collection of HTTP requests to test the JavaDynamo database.
# Click the green "play" icon next to each request to run it individually.
###

# --- Environment Variables ---
# Define variables here to make requests reusable.
@baseUrl = http://localhost:8080/api/v1
@tableName = Users
@partitionKeyName = userId
@userId = user123
@nonExistentUserId = user999
@contentType = application/json

### --------------------------------------------------
# 1. Create a table named 'Users'
#
# Sends a POST request to create a new table.
# Expects a 201 Created response.
POST {{baseUrl}}/tables
Content-Type: {{contentType}}

{
  "tableName": "{{tableName}}",
  "partitionKeyName": "{{partitionKeyName}}"
}

### --------------------------------------------------
# 2. Add an item for a new user
#
# Sends a POST request to add an item to the 'Users' table.
# Expects a 200 OK response with the created item.
POST {{baseUrl}}/tables/{{tableName}}/items
Content-Type: {{contentType}}

{
  "{{partitionKeyName}}": "{{userId}}",
  "name": "Samarth",
  "city": "Pimpri-Chinchwad",
  "timestamp": "{{$datetime iso8601}}"
}

### --------------------------------------------------
# 3. Get the item for 'user123'
#
# Sends a GET request to retrieve the item we just created.
# Expects a 200 OK response with the item's data.
GET {{baseUrl}}/tables/{{tableName}}/items/{{userId}}

### --------------------------------------------------
# 4. Try to get a non-existent item
#
# Sends a GET request for a key that does not exist.
# Expects a 404 Not Found response.
GET {{baseUrl}}/tables/{{tableName}}/items/{{nonExistentUserId}}

### --------------------------------------------------
# 5. Delete the item for 'user123'
#
# Sends a DELETE request to remove the item.
# Expects a 204 No Content response.
DELETE {{baseUrl}}/tables/{{tableName}}/items/{{userId}}

### --------------------------------------------------
# 6. Verify the item is gone
#
# Sends another GET request for the deleted user.
# Expects a 404 Not Found response, confirming deletion.
GET {{baseUrl}}/tables/{{tableName}}/items/{{userId}}
